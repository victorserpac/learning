{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;kCAEWC,G,EAAM;;AAEnB,UAAK,CAAEA,IAAIC,EAAX,EACE,MAAM,IAAIC,KAAJ,CAAWF,IAAIG,UAAf,CAAN;;AAEF,aAAOH,GAAP;AACD;;;wBAEII,G,EAAM;AAAA;;AAET,aAAOC,MAAOD,GAAP,EACJE,IADI,CACE;AAAA,eAAO,MAAKC,aAAL,CAAoBP,GAApB,CAAP;AAAA,OADF,EAEJM,IAFI,CAEE;AAAA,eAAON,IAAIQ,IAAJ,EAAP;AAAA,OAFF,CAAP;AAGD;;;yBAEKJ,G,EAAKK,I,EAAO;AAAA;;AAEhB,aAAOJ,MAAOD,GAAP,EAAY;AACjBM,iBAAS,EAAE,gBAAgB,kBAAlB,EADQ;AAEjBC,gBAAQ,MAFS;AAGjBC,cAAMC,KAAKC,SAAL,CAAgBL,IAAhB;AAHW,OAAZ,EAKNH,IALM,CAKA;AAAA,eAAO,OAAKC,aAAL,CAAoBP,GAApB,CAAP;AAAA,OALA,CAAP;AAMD","file":"HttpService.js","sourcesContent":["class HttpService {\n\n  _handleErrors( res ) {\n\n    if ( ! res.ok )\n      throw new Error( res.statusText );\n\n    return res;\n  }\n\n  get( url ) {\n\n    return fetch( url )\n      .then( res => this._handleErrors( res ) )\n      .then( res => res.json() );\n  }\n\n  post( url, dado ) {\n\n    return fetch( url, {\n      headers: { 'Content-Type': 'application/json' },\n      method: 'post',\n      body: JSON.stringify( dado )\n    })\n    .then( res => this._handleErrors( res ));\n  }\n}\n"]}