{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","periodos","reduce","dados","periodo","concat","catch","Error","erro","resolve","reject","get","negociacoes","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\nimport { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n  constructor() {\n    this._http = new HttpService();\n  }\n\n\n  obterNegociacoes() {\n    return Promise.all([\n      this.obterNegociacoesDaSemana(),\n      this.obterNegociacoesDaSemanaAnterior(),\n      this.obterNegociacoesDaSemanaRetrasada()\n    ]).then( periodos =>\n\n      periodos\n        .reduce( ( dados, periodo ) => [].concat( dados, periodo ) )\n\n    )\n    .catch( erro => {\n      throw new Error( erro );\n    });\n  }\n\n\n  obterNegociacoesDaSemana() {\n\n    return new Promise( ( resolve, reject ) => {\n\n      this._http\n        .get( 'negociacoes/semana' )\n        .then( negociacoes => {\n          resolve(\n            negociacoes.map( objeto =>\n              new Negociacao(\n                new Date( objeto.data ),\n                objeto.quantidade,\n                objeto.valor\n              )\n            )\n          );\n        })\n        .catch( erro => {\n          console.log( erro );\n          reject( 'não foi possível obter as negociações da semana' );\n        });\n    });\n  }\n\n\n  obterNegociacoesDaSemanaAnterior() {\n\n    return new Promise( ( resolve, reject ) => {\n\n      this._http\n        .get( 'negociacoes/anterior' )\n        .then( negociacoes => {\n          resolve(\n            negociacoes.map( objeto =>\n              new Negociacao(\n                new Date( objeto.data ),\n                objeto.quantidade,\n                objeto.valor\n              )\n            )\n          );\n        })\n        .catch( erro => {\n          console.log( erro );\n          reject( 'não foi possível obter as negociações da semana anterior' );\n        });\n    });\n  }\n\n\n  obterNegociacoesDaSemanaRetrasada() {\n\n    return new Promise( ( resolve, reject ) => {\n      this._http\n        .get( 'negociacoes/retrasada' )\n        .then( negociacoes => {\n          resolve(\n            negociacoes.map( objeto =>\n              new Negociacao(\n                new Date( objeto.data ),\n                objeto.quantidade,\n                objeto.valor\n              )\n            )\n          );\n        })\n        .catch( erro => {\n          console.log( erro );\n          reject( 'não foi possível obter as negociações da semana retrasada' );\n        });\n    });\n  }\n\n\n  cadastra( negociacao ) {\n    return ConnectionFactory\n      .getConnection()\n      .then( connection => new NegociacaoDao( connection ) )\n      .then( dao => dao.adiciona( negociacao ) )\n      .then( () => 'Negociação adicionada com sucesso' )\n      .catch( erro => {\n        console.log( erro );\n        throw new Error( 'Não foi possível adicionar a negociação' );\n      });\n  }\n\n\n  lista() {\n    return ConnectionFactory\n      .getConnection()\n      .then( connection => new NegociacaoDao( connection ) )\n      .then( dao => dao.listaTodos() )\n      .catch( erro => {\n        console.log( erro );\n        throw new Error( 'Não foi possível obter as negociações' );\n      });\n  }\n\n\n  apaga() {\n    return ConnectionFactory\n      .getConnection()\n      .then( connection => new NegociacaoDao( connection ) )\n      .then( dao => dao.apagaTodos() )\n      .then( () => 'Negociações apagadas com sucesso' )\n      .catch( erro => {\n        console.log( erro );\n        throw new Error( 'Não foi possível apagar as negociações' );\n      });\n  }\n\n\n  importa( listaAtual ) {\n    return this\n      .obterNegociacoes()\n      .then( negociacoes =>\n        negociacoes.filter( negociacao =>\n          ! listaAtual.some( negociacaoExistente =>\n            negociacao.isEquals( negociacaoExistente )\n          )\n        )\n      )\n      .catch( erro => {\n        console.log( erro );\n        throw new Error( 'Não foi possível buscar negociações para importar' );\n      });\n  }\n\n}\n"]}