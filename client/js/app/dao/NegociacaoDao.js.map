{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","event","result","dado","value","push","_date","_amount","_value","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;+BAEIC,a;AAEX,+BAAaC,UAAb,EAA0B;AAAA;;AACxB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;;;;mCAESC,U,EAAa;AAAA;;AACrB,mBAAO,IAAIC,OAAJ,CAAa,UAAEC,OAAF,EAAWC,MAAX,EAAuB;;AAEzC,kBAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACE,CAAE,MAAKN,MAAP,CADF,EACmB,WADnB,EAEXO,WAFW,CAEE,MAAKP,MAFP,EAGXQ,GAHW,CAGNP,UAHM,CAAd;;AAKAI,sBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,eAFD;;AAIAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAaC,EAAEC,MAAF,CAASC,KAAtB;AACAX,uBAAQ,yCAAR;AACD,eAHD;AAKD,aAhBM,CAAP;AAiBD;;;uCAEY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAa,UAAEC,OAAF,EAAWC,MAAX,EAAuB;;AAEzC,kBAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACG,CAAE,OAAKN,MAAP,CADH,EACoB,WADpB,EAEVO,WAFU,CAEG,OAAKP,MAFR,EAGViB,UAHU,EAAb;;AAKA,kBAAIC,cAAc,EAAlB;;AAEAF,qBAAOP,SAAP,GAAmB,iBAAS;AAC1B,oBAAIU,QAAQC,MAAMN,MAAN,CAAaO,MAAzB;;AAEA,oBAAKF,KAAL,EAAa;AACX,sBAAIG,OAAOH,MAAMI,KAAjB;;AAEAL,8BAAYM,IAAZ,CAAkB,IAAI5B,UAAJ,CAAgB0B,KAAKG,KAArB,EAA4BH,KAAKI,OAAjC,EAA0CJ,KAAKK,MAA/C,CAAlB;;AAEAR,wBAAMS,QAAN;AAED,iBAPD,MAOO;;AAELzB,0BAASe,WAAT;AAED;AACF,eAfD;;AAiBAF,qBAAON,OAAP,GAAiB,iBAAS;AACxBC,wBAAQC,GAAR,CAAaQ,MAAMN,MAAN,CAAaC,KAAb,CAAmBc,IAAhC;AACAzB,uBAAQ,wCAAR;AACD,eAHD;AAID,aA9BM,CAAP;AA+BD;;;uCAGY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAa,UAAEC,OAAF,EAAWC,MAAX,EAAuB;;AAEzC,kBAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACE,CAAE,OAAKN,MAAP,CADF,EACmB,WADnB,EAEXO,WAFW,CAEE,OAAKP,MAFP,EAGX8B,KAHW,EAAd;;AAKAzB,sBAAQI,SAAR,GAAoB;AAAA,uBAAKN,QAAS,kCAAT,CAAL;AAAA,eAApB;;AAEAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAaC,EAAEC,MAAF,CAASC,KAAtB;AACAX,uBAAQ,wCAAR;AACD,eAHD;AAKD,aAdM,CAAP;AAeD","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoDao {\n\n  constructor( connection ) {\n    this._connection = connection;\n    this._store = 'negociacoes';\n  }\n\n  adiciona( negociacao ) {\n    return new Promise( ( resolve, reject ) => {\n\n      let request = this._connection\n        .transaction( [ this._store ], 'readwrite' )\n        .objectStore( this._store )\n        .add( negociacao );\n\n      request.onsuccess = e => {\n        resolve( );\n      };\n\n      request.onerror = e => {\n        console.log( e.target.error );\n        reject( 'não foi possível adicionar a negociação' );\n      };\n\n    });\n  }\n\n  listaTodos() {\n    return new Promise( ( resolve, reject ) => {\n\n      let cursor = this._connection\n        .transaction( [ this._store ], 'readwrite' )\n        .objectStore( this._store )\n        .openCursor();\n\n      let negociacoes = [];\n\n      cursor.onsuccess = event => {\n        let atual = event.target.result;\n\n        if ( atual ) {\n          let dado = atual.value;\n\n          negociacoes.push( new Negociacao( dado._date, dado._amount, dado._value ) );\n\n          atual.continue();\n\n        } else {\n\n          resolve( negociacoes );\n\n        }\n      };\n\n      cursor.onerror = event => {\n        console.log( event.target.error.name );\n        reject( 'Não foi possivel listar as negociações' );\n      };\n    });\n  }\n\n\n  apagaTodos() {\n    return new Promise( ( resolve, reject ) => {\n\n      let request = this._connection\n        .transaction( [ this._store ], 'readwrite' )\n        .objectStore( this._store )\n        .clear();\n\n      request.onsuccess = e => resolve( 'Negociações apagadas com sucesso' );\n\n      request.onerror = e => {\n        console.log( e.target.error );\n        reject( 'Não foi possível apagar as negociações' );\n      };\n\n    });\n  }\n}\n"]}